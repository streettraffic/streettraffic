from main_program.map_resource import ultil
from main_program.database import TrafficData
from main_program import tools
from main_program.server import TrafficServer
from main_program.datafeed import DataFeed
import json
import rethinkdb as r
import time
import datetime as dt
import asyncio
from dateutil import parser



## Furman's coordinates is 34.9237째 N, 82.4383째 W
## which translate to 34.9237째, -82.4383째 according to 
## https://msdn.microsoft.com/en-us/library/aa578799.aspx


zoom = 14
(col, row) = ultil.get_tile(34.9237, -82.4383, zoom)
print('furman zoom/col/row is %d/%d/%d' % (zoom,round(col),round(row)))
## get traffic tile
#
# id4 https://1.traffic.maps.cit.api.here.com/maptile/2.1/traffictile/newest/normal.day/14/4440/6494/256/png8?app_id=F8aPRXcW3MmyUvQ8Z3J9&app_code=IVp1_zoGHdLdz0GvD_Eqsw
# id2 https://1.traffic.maps.cit.api.here.com/maptile/2.1/traffictile/newest/normal.day/14/4440/6493/256/png8?app_id=F8aPRXcW3MmyUvQ8Z3J9&app_code=IVp1_zoGHdLdz0GvD_Eqsw
# id3 https://1.traffic.maps.cit.api.here.com/maptile/2.1/traffictile/newest/normal.day/14/4439/6494/256/png8?app_id=F8aPRXcW3MmyUvQ8Z3J9&app_code=IVp1_zoGHdLdz0GvD_Eqsw
# id1 https://1.traffic.maps.cit.api.here.com/maptile/2.1/traffictile/newest/normal.day/14/4439/6493/256/png8?app_id=F8aPRXcW3MmyUvQ8Z3J9&app_code=IVp1_zoGHdLdz0GvD_Eqsw
#
## download those pictures and edit them together in the following format
#
#############
#     #     #
# id1 # id2 #
#     #     #
#############
#     #     #
# id3 # id4 #
#     #     #
############# 

(col, row) = (4440, 6493)
## get flow tile (transparent traffic map)
#
# https://1.traffic.maps.cit.api.here.com/maptile/2.1/flowtile/newest/normal.day/14/4440/6493/256/png8?app_id=F8aPRXcW3MmyUvQ8Z3J9&app_code=IVp1_zoGHdLdz0GvD_Eqsw

quadkey = ultil.get_quadkeys(4440, 6493, zoom)
## get the same traffic tile by using quadkey
#
# https://tiles.traffic.cit.api.here.com/traffic/6.0/tiles/quadkeytraffic?app_id=F8aPRXcW3MmyUvQ8Z3J9&app_code=IVp1_zoGHdLdz0GvD_Eqsw&quadkey=03200303033202&depth=8bit
#
## get the traffic info (json) by using same quadkey/location
#
# https://traffic.cit.api.here.com/traffic/6.2/flow.json?app_id=F8aPRXcW3MmyUvQ8Z3J9&app_code=IVp1_zoGHdLdz0GvD_Eqsw&quadkey=03200303033202&depth=8bit

def get_traffic_tile_of_different_zoom():
    """
    get traffic tile of different zoom
    """
    base_url = 'https://1.traffic.maps.cit.api.here.com/maptile/2.1/traffictile/newest/normal.day/'
    app_id = 'F8aPRXcW3MmyUvQ8Z3J9'
    app_code = 'IVp1_zoGHdLdz0GvD_Eqsw'
    image_size = 512  # or could choose 512
    for i in range(20):
        (col, row) = ultil.get_tile(34.8529419802915, -82.3969868197085, i)  # coffee underground lat and lon
        total_url = base_url + str(i) + '/' + str(int(col)) + '/' + str(int(row)) + '/' + str(image_size) + '/png8?app_id=' + app_id + '&app_code=' + app_code
        print(total_url)
    
def measure_estimated_request():
    """
    measure the squares/request required to cover greenville county based on zoom level.
    since we only have 100k request available, we need to carefully arrange our request quantity.
    """
    up_right_position = (34.947532,-82.186334)
    bottom_left_position = (34.595576,-82.547509)
    for i in range(3,20):
        up_right_tile = ultil.get_tile(*up_right_position, i)
        bottom_left_tile = ultil.get_tile(*bottom_left_position, i)
        square_x_length = abs(int(up_right_tile[0]) - int(bottom_left_tile[0])) + 1
        square_y_length = abs(int(up_right_tile[1]) - int(bottom_left_tile[1])) + 1
        #print('x',square_x_length, 'y',square_y_length)
        estimated_tile_in_square = square_x_length * square_y_length
        print(i, estimated_tile_in_square)


#get_traffic_tile_of_different_zoom()
#measure_estimated_request()

## atlanta worst traffic point:
altanta_worst = (33.670156, -84.325984)
altanta_worst_map_tile = ultil.get_map_tile_resource(altanta_worst, "latlon", 14, 512)
atlanta_worst_json_tile = ultil.get_traffic_json_resource(altanta_worst, "latlon", 14)

## atlanta tile
cor1 = (33.728999, -84.395856)#(33.766764, -84.409533)
cor2 = (33.775902, -84.363917)#(33.740003, -84.368978)
info = ultil.get_area_tile_matrix([cor1, cor2], 14)
matrix1 = ultil.get_area_tile_matrix_url("traffic_json", [cor1, cor2], 14)
#matrix1 = ultil.get_area_tile_matrix_url("map_tile", cor1, cor2, 14)
#img_matrix = ultil.assemble_matrix_images(matrix1)


## Dr. Allen house
#cor1 = (34.939348, -82.456024)
#cor2 = (34.910812, -82.420834)
#matrix = ultil.get_area_tile_matrix_url(cor1, cor2, 14)
#img_matrix = ultil.assemble_matrix_images(matrix)


#with open('test.json') as f:
#    data = json.load(f)

class TestTrafficServer(TrafficServer):

    async def main_crawler(self):
        """
        """
        self.crawler_running = True
        while self.crawler_running:
            print('start crawling')
            self.traffic_data.store_matrix_json(self.traffic_matrix_list)
            #self.traffic_data.insert_analytics_traffic_pattern('[33.880079, 33.648894, -84.485086, -84.311365]')

            # time management, we want to execute script every 30 minutes
            # in order to do that we need to calculate how many seconds we should sleep
            current = dt.datetime.utcnow()
            if current.minute < 30:
                wait_seconds = 30*60 - current.minute*60 - current.second
            else:
                wait_seconds = 60*60 - current.minute*60 - current.second

            print('crawling finished')

            await asyncio.sleep(wait_seconds)   

traffic_server = TestTrafficServer(database_name= "Traffic", database_ip = "localhost")
traffic_server.start()
conn = traffic_server.traffic_data.conn

#r.set_loop_type("asyncio")
#data_feed = DataFeed('test')

## Nice to know that we have set up datatime object correctly
# r.db('Traffic').table('flow_data').between(r.expr(yourdate), r.epoch_time(int(time.time())), index='created_timestamp').run()

#json_data = traffic_data.read_traffic_data('https://traffic.cit.api.here.com/traffic/6.2/flow.json?app_id=F8aPRXcW3MmyUvQ8Z3J9&app_code=IVp1_zoGHdLdz0GvD_Eqsw&quadkey=03200303033202&responseattributes=sh,fc')
#
#traffic_data.insert_json_data(json_data)

## inserting test data into test.geo table
#current_epoch = 1497446043
#
#for i in range(10):
#    data = []
#    for i in range(10):
#        data += [{'timestamp': r.epoch_time(time.time()) }]
#        
#    r.table('geo').insert(data).run()
#    time.sleep(1)
#        
#print('finished')

#test_geojson1 = traffic_data.fetch_geojson_item('0ccbbac6-12b8-4681-a1a4-9e15e89bd4e1')
#test_geojson2 = traffic_data.fetch_geojson_item('08901fc1-b9d3-4c3a-a48e-6be807df39dc')
#test_data = TrafficData.generate_geojson_collection([test_geojson1,test_geojson2 ])

## display traffic test
#display_traffic = traffic_data.display_json_traffic(['974f1914-8179-4518-8f26-6b013b998d72'])

## atlanta traffic original documents id
atlanta_traffic_original_doc_ids = [
    '4f159114-e1d9-4d21-881d-16c3f199b381',
    '38070cae-aa79-4828-a95f-31df91883846',
    'ade4f658-8760-449e-8747-3c306588fd47',
    'a805261f-341d-4790-90d2-8a5d6d88ca37',
    '1ae29972-6c2d-4145-9226-a9c34a8498c4',
    'fb39a2cf-d7e7-49bf-a7bd-b0e713539447',
    '9a136e28-67a8-4d3e-beda-351c82565c7f',
    '9a136e28-67a8-4d3e-beda-351c82565c7f',
    'a3f3dc2b-eea0-40d0-87c2-7ad7b8cc0fdd',
]


## given a point, we want to know the closest road to it
#test_start_location = (33.736818, -84.394652)
#test_end_location = (33.769922, -84.377616)

with open('traffic data samples/google_routing.json') as f:
    data = json.load(f)
    
## testing geospatial query
#t1 = {"lat":33.74416482021835,"lng":-84.39327120780945}
#t2 = {"lat":33.74251436232895,"lng":-84.39330339431763}
#query_point = {"lat":33.743370820116844,"lng":-84.39433336257935}
#t3 = {"lat":33.74143931727222,"lng":-84.3949556350708}
#t4 = {"lat":33.74416035956415,"lng":-84.39240217208862}

#r.table('geo_test').insert([
#  {
#    id: 1,
#    name: 't1',
#    location: r.point(-84.39327120780945,33.74416482021835)
#  },
#  {
#    id: 2,
#    name: 't2',
#    location: r.point(-84.39330339431763,33.74251436232895)
#  },
#  {
#    id: 3,
#    name: 'line',
#    location: r.line([-84.39327120780945,33.74416482021835], [-84.39330339431763,33.74251436232895])
#  }
#])
    
    
## Manhattan island
man_point1 = (40.710943, -74.017559)
man_point2 = (40.728209, -73.982583)
matrix2 = ultil.get_area_tile_matrix_url("traffic_json", [man_point1, man_point2], 14)

#traffic_server.traffic_data.store_matrix_json([matrix1, matrix2])
# .get_all(crawled_batch_id, index = "crawled_batch_id")

#flow_data_feed = r.db('test').table('flow_data').changes().run(traffic_server.traffic_data.conn)
#road_data_feed = r.db('test').table('road_data').changes().run(traffic_server.traffic_data.conn)
#original_data_feed = r.db('test').table('original_data').changes().run(traffic_server.traffic_data.conn)
#crawled_batch_feed = r.db('test').table('crawled_batch').changes().run(traffic_server.traffic_data.conn)

#for original_data_id in record[0]:
#    r.db('test').table('original_data').get(original_data_id).delete().run(traffic_server.traffic_data.conn)
#for flow_data_id in record[1]:
#    r.db('test').table('flow_data').get(flow_data_id).delete().run(traffic_server.traffic_data.conn)
#for road_data_id in record[2]:
#    r.db('test').table('road_data').get(road_data_id).delete().run(traffic_server.traffic_data.conn)



# r.net.connection_type = r.net.DefaultConnection


## Crawl atlanta city
p1 = (33.653079, -84.505187)
p2 = (33.873635, -84.343085)
tile_matrix = ultil.get_area_tile_matrix([p1, p2], 14)
url_matrix = ultil.get_area_tile_matrix_url("traffic_json", [p1, p2], 14)

##
#now = time.time()
#flow_data = r.table('flow_data').get('{"DE": "10th St/Exit 250", "LE": 0.55387, "PC": 4132, "QD": "+"}').run(traffic_server.traffic_data.conn)
#print(time.time() - now)
#
#now = time.time()
#flow_data = r.table('flow_data').get('{"DE": "10th St/Exit 250", "LE": 0.55387, "PC": 4132, "QD": "+"}')['CF']['0358a775-569b-464f-abd7-25ab1da6e985'].run(traffic_server.traffic_data.conn)
#print(time.time() - now)


## Spatial sampling for atlanta area
sampling_points_atlanta = traffic_server.traffic_data.spatial_sampling_points(top=33.880079, bottom=33.648894, left=-84.485086, right=-84.311365, grid_point_distance = 1000)
sampling_points_atlanta_plot = traffic_server.traffic_data.format_list_points_for_display(sampling_points_atlanta)
#x = traffic_server.traffic_data.set_traffic_patter_monitoring_area(top=33.880079, bottom=33.648894, left=-84.485086, right=-84.311365, description='test_atlanta', grid_point_distance=1000, testing=True, force=True)

# analyzing traffic patter
#start = datetime.datetime(2017,6,27,0,0,0, tzinfo = r.make_timezone('00:00'))
#end = datetime.datetime(2017,6,27,23,0,0, tzinfo = r.make_timezone('00:00'))
#analytics_monitored_area_id = '[33.880079, 33.648894, -84.485086, -84.311365]'
#start_time_iso = "2017-06-23T04:00:00.000Z"
#end_time_iso = "2017-06-24T03:59:59.000Z"
#traffic_server.traffic_data.get_analytics_traffic_pattern_between(start_time_iso,end_time_iso, '[33.880079, 33.648894, -84.485086, -84.311365]')

## little benchmark
#query = r.table('flow_item').get_field('flow_item_id').limit(10000).run(conn)
#flow_item_id_collection = []
#crawled_batch_id = '0e8e60c5-3936-41f0-86fc-3b6e0e37ac4a'
#for item in query:
#    flow_item_id_collection += [item]
#    
#def batch_query_get_all(flow_item_id_collection, crawled_batch_id):
#    batch = []
#    for flow_item_id in flow_item_id_collection:
#        batch += [[flow_item_id, crawled_batch_id]]
#    return batch

### first way, use a for loop
#start_time = time.time()
#for flow_item_id in flow_item_id_collection:
#    r.table('flow_data').get_all([flow_item_id, crawled_batch_id], index='flow_crawled_batch').run(conn)
#
#print('first way used', time.time() - start_time, 'seconds')
#    
### second way, use batch
#start_time = time.time()
#r.table('flow_data').get_all(*batch_query_get_all(flow_item_id_collection, crawled_batch_id), index='flow_crawled_batch').run(conn)
#print('second way used', time.time() - start_time, 'seconds')
#    

#p1 = (38.718152,-77.374552)
#p2 = (39.465786, -76.455926)
#tile_matrix = ultil.get_area_tile_matrix(p1, p2, 14)
    
# Miami
#cor1 = (25.803018, -80.267741)
#cor2 = (25.726957, -80.192897)
#info = ultil.get_area_tile_matrix([cor1, cor2], 14)
#matrix = ultil.get_area_tile_matrix_url("map_tile", [cor1, cor2], 14)
#
## Use polygon to get area_tile
#polygon_points = [[25.890099,-80.264561], [25.851873,-80.308744], [25.811230,-80.248538], [25.848596,-80.215765]]
#polygon = ultil.produce_polygon(polygon_points, 14)
#info = ultil.get_area_tile_matrix(polygon_points, 14, True)
#atlanta_polygon = [[33.73233462866422, -84.43645477294922],
# [33.786566509489155, -84.37259674072266],
# [33.7597402884442, -84.34444427490234],
# [33.7094898901883, -84.41619873046875],
# [33.73233462866422, -84.43645477294922]]
#
#new_york_polygon = [[40.7701418259051, -74.15771484375],
# [40.76806170936613, -73.8720703125],
# [40.88444793903562, -73.27056884765625],
# [40.959159772134896, -72.6800537109375],
# [40.824201998489904, -72.61688232421875],
# [40.54093880017256, -74.410400390625],
# [40.7701418259051, -74.15771484375]]
#
##info = ultil.get_area_tile_matrix(atlanta_polygon, 14, True)
##matrix = ultil.get_area_tile_matrix_url("map_tile", atlanta_polygon, 14, True)
###img_matrix = ultil.assemble_matrix_images(matrix)
#
#
#washington_baltimore_polygon = [[38.77978137804918, -77.200927734375],
# [38.77549900381297, -76.9482421875],
# [38.86965182408357, -76.7999267578125],
# [39.002110299225144, -76.7999267578125],
# [39.06184913429154, -76.783447265625],
# [39.16414104768743, -76.5692138671875],
# [39.22799807055236, -76.4208984375],
# [39.33854604847979, -76.4044189453125],
# [39.457402514270825, -76.5142822265625],
# [39.436192999314095, -76.70654296875],
# [39.32579941789297, -76.8768310546875],
# [39.198205348894795, -76.8878173828125],
# [39.01918369029135, -77.05810546875],
# [39.06184913429154, -77.1624755859375],
# [38.950865400919994, -77.2613525390625],
# [38.8225909761771, -77.2503662109375],
# [38.77978137804918, -77.200927734375]]
#
#washington_baltimore_info = ultil.get_area_tile_matrix(washington_baltimore_polygon, 14, True)
#washington_baltimore_matrix = ultil.get_area_tile_matrix_url("map_tile", washington_baltimore_polygon, 14, True)
##img_matrix = ultil.assemble_matrix_images(matrix)
#
def matrix_coverage(matrix):
    filled_count = 0
    None_count = 0
    for row in range(len(matrix)):
        for col in range(len(matrix.iloc[0])):
            if matrix.iloc[row, col]:
                filled_count += 1
            else:
                None_count += 1
    
    print('matrix has a total of', len(matrix) *len(matrix.iloc[0]), 'tiles')
    print(filled_count, 'of them are filled')
    print(None_count, 'of them are None because of the polygon limitation')
                

#newyork_boston_polygon = [[40.51066695034288, -74.168701171875],
# [40.606654663050485, -74.04098510742188],
# [40.57015381856105, -73.92974853515625],
# [40.834593138080244, -72.55096435546875],
# [41.000629848685385, -72.59490966796875],
# [40.83043687764923, -73.7786865234375],
# [41.033787135218645, -73.50128173828125],
# [41.269549502842565, -72.8009033203125],
# [41.269549502842565, -72.2845458984375],
# [41.376808565702355, -71.4495849609375],
# [41.7180304600481, -71.3671875],
# [41.475660200278206, -71.1309814453125],
# [41.86137915587359, -70.5377197265625],
# [41.94314874732696, -70.5377197265625],
# [41.97991089691236, -70.6695556640625],
# [42.14304156290942, -70.6475830078125],
# [42.26917949243505, -70.8453369140625],
# [42.248851700720955, -70.960693359375],
# [42.335199554872325, -71.03759765625],
# [42.51260171573666, -70.8343505859375],
# [42.64204079304425, -70.59814453125],
# [42.66628070564928, -70.872802734375],
# [42.69454866207692, -71.2628173828125],
# [42.4923525914282, -71.575927734375],
# [42.19189902447192, -72.059326171875],
# [41.50446357504803, -73.49853515625],
# [41.469486382476376, -74.07257080078125],
# [41.05243077390835, -74.31976318359375],
# [40.56389453066509, -74.34722900390625],
# [40.51066695034288, -74.168701171875]]
#newyork_boston_info = ultil.get_area_tile_matrix(newyork_boston_polygon, 14, True)
#newyork_boston_matrix = ultil.get_area_tile_matrix_url("map_tile", newyork_boston_polygon, 14, True)

newyork_boston_route_polygon = json.loads('[[40.80172559124291, -73.95772933959961], [40.80731292377169, -73.95000457763672], [40.81445882626795, -73.94794464111328], [40.841865966890786, -73.93627166748047], [40.83978809722462, -73.92030715942383], [40.84796933232004, -73.91756057739258], [40.883409680091006, -73.88786315917969], [40.897424801491276, -73.86726379394531], [40.9218144123785, -73.85078430175781], [40.91143695415643, -73.80889892578125], [40.95812268616409, -73.78005981445312], [40.972640406936456, -73.7457275390625], [40.985081625514354, -73.71482849121094], [41.01565631208055, -73.69903564453125], [41.03326918097483, -73.6578369140625], [41.06382150855229, -73.65715026855469], [41.08866717321063, -73.64273071289062], [41.079351149468984, -73.61457824707031], [41.09746442741868, -73.55964660644531], [41.11143411567732, -73.51776123046875], [41.106260503564485, -73.48480224609375], [41.154876361984655, -73.38180541992188], [41.16314781378643, -73.31451416015625], [41.18692242290296, -73.27743530273438], [41.22411753058293, -73.22662353515625], [41.2282490151853, -73.11676025390625], [41.24167453726628, -73.05221557617188], [41.30360274975627, -73.01239013671875], [41.35310301646902, -72.92449951171875], [41.38917324986402, -72.8448486328125], [41.49006348843993, -72.7899169921875], [41.5579215778042, -72.69927978515625], [41.72213058512578, -72.60589599609375], [41.740577910570785, -72.63885498046875], [41.76311744700587, -72.5592041015625], [41.79384042311992, -72.5262451171875], [41.840920397579936, -72.4053955078125], [41.83887416186901, -72.3504638671875], [41.92271616673922, -72.1966552734375], [42.11248648904184, -72.037353515625], [42.18986405028881, -71.773681640625], [42.222415775126244, -71.5484619140625], [42.256983603767466, -71.54571533203125], [42.34027515373573, -71.15570068359375], [42.34738030389109, -71.11862182617188], [42.33824496335084, -71.08840942382812], [42.36564700281194, -71.07192993164062], [42.37072014353198, -71.12136840820312], [42.35042512243458, -71.30813598632812], [42.28543700749154, -71.57455444335938], [42.24275208539065, -71.63497924804688], [42.232584749313325, -71.7791748046875], [42.1389684045809, -72.0977783203125], [41.957447659082824, -72.2296142578125], [41.871606081179394, -72.3834228515625], [41.87774145109677, -72.44659423828125], [41.78769700539063, -72.60589599609375], [41.756971085614175, -72.7020263671875], [41.68727118379141, -72.674560546875], [41.41801503608025, -72.8887939453125], [41.33557597312392, -73.02337646484375], [41.279870545327114, -73.08929443359375], [41.24064190269474, -73.27056884765625], [41.11660732012896, -73.6083984375], [41.100051630930466, -73.68255615234375], [41.03793062246529, -73.69903564453125], [41.023427276088945, -73.73336791992188], [40.985081625514354, -73.75946044921875], [40.967455873296714, -73.80889892578125], [40.93322773476865, -73.82125854492188], [40.94048973170136, -73.86932373046875], [40.85848657915526, -73.93112182617188], [40.8527737139341, -73.95034790039062], [40.803934592883806, -73.9764404296875], [40.80172559124291, -73.95772933959961]]')
#newyork_boston_route_polygon_info = ultil.get_area_tile_matrix(newyork_boston_route_polygon, 14, True)
#matrix_coverage(newyork_boston_route_polygon_info)

#test = json.loads('[[40.803934592883806, -73.96305084228516], [40.803674714153814, -73.95790100097656], [40.80783265172103, -73.95549774169922], [40.812769864222744, -73.95343780517578], [40.813549390509365, -73.95910263061523], [40.81770670935412, -73.9573860168457], [40.821733863545774, -73.95292282104492], [40.82498139044294, -73.95137786865234], [40.82654014687083, -73.9493179321289], [40.82848854088364, -73.9486312866211], [40.831475967182925, -73.94708633422852], [40.8340736197749, -73.94657135009766], [40.836930920074984, -73.94554138183594], [40.83900887930628, -73.94365310668945], [40.841086773399425, -73.94262313842773], [40.843164602353745, -73.94210815429688], [40.8460215108052, -73.9405632019043], [40.847839479333594, -73.94021987915039], [40.84654093547386, -73.93592834472656], [40.845372224244144, -73.93386840820312], [40.84524236616855, -73.93112182617188], [40.84355418803084, -73.92923355102539], [40.84355418803084, -73.92717361450195], [40.84264515122197, -73.92545700073242], [40.84355418803084, -73.92391204833984], [40.84563193963191, -73.92305374145508], [40.84693050130357, -73.92356872558594], [40.84939769837689, -73.92099380493164], [40.851475266769036, -73.9189338684082], [40.85381245334478, -73.91687393188477], [40.85614955747385, -73.91618728637695], [40.858356746780416, -73.9134407043457], [40.86108317321338, -73.91069412231445], [40.86277090476645, -73.90897750854492], [40.864718233887565, -73.9079475402832], [40.866795321839284, -73.90708923339844], [40.86822328201556, -73.90588760375977], [40.87043006899356, -73.90588760375977], [40.87146853153461, -73.90434265136719], [40.87283148890258, -73.90434265136719], [40.87477852218562, -73.9039134979248], [40.876465904713406, -73.90305519104004], [40.877958553405335, -73.9021110534668], [40.87925648143131, -73.9006519317627], [40.88061927846823, -73.89962196350098], [40.882371404858155, -73.89824867248535], [40.88405859384016, -73.89644622802734], [40.88509684260461, -73.89490127563477], [40.886264852994955, -73.89352798461914], [40.88704351513571, -73.89026641845703], [40.88782216811419, -73.88803482055664], [40.88950921813564, -73.88494491577148], [40.89106645690189, -73.8833999633789], [40.893532009994274, -73.88031005859375], [40.89586771238051, -73.8779067993164], [40.898462840536766, -73.87687683105469], [40.901836354935256, -73.87550354003906], [40.90520969727357, -73.87516021728516], [40.908063929475226, -73.87481689453125], [40.911177496828316, -73.87275695800781], [40.91506924984297, -73.86932373046875], [40.91714475777896, -73.86726379394531], [40.91947962631574, -73.86005401611328], [40.9218144123785, -73.85833740234375], [40.92414911596633, -73.8552474975586], [40.92648373707824, -73.85387420654297], [40.92829949647758, -73.85147094726562], [40.92674313433286, -73.84632110595703], [40.925705539204976, -73.84014129638672], [40.924927332167655, -73.83636474609375], [40.923370890601, -73.83155822753906], [40.92207382796113, -73.8277816772461], [40.920776739865985, -73.82194519042969], [40.920517319192335, -73.81782531738281], [40.920776739865985, -73.81301879882812], [40.924927332167655, -73.80786895751953], [40.93063397096323, -73.80374908447266], [40.935043308845614, -73.80374908447266], [40.940230388414975, -73.8006591796875], [40.94412043078805, -73.79653930664062], [40.94904748887512, -73.79310607910156], [40.953974179338694, -73.79413604736328], [40.956826305786706, -73.79241943359375], [40.960974633375436, -73.78314971923828], [40.96356720572569, -73.77525329589844], [40.966418917683285, -73.77010345458984], [40.9692705064102, -73.76426696777344], [40.97108508961964, -73.75911712646484], [40.97393647669262, -73.75362396240234], [40.97549172679039, -73.74675750732422], [40.98093481339142, -73.73954772949219], [40.985081625514354, -73.73336791992188], [40.989228176893796, -73.72787475585938], [40.99337446752447, -73.7237548828125], [40.99803873280107, -73.71963500976562], [41.00451633152264, -73.71517181396484], [41.0102160917684, -73.7127685546875], [41.01487916525437, -73.71070861816406], [41.01721057822843, -73.69766235351562], [41.01980094031294, -73.69285583496094], [41.02394530775749, -73.68324279785156], [41.030161369935556, -73.67088317871094], [41.03793062246529, -73.66401672363281], [41.04880603558487, -73.66195678710938], [41.06019739786093, -73.66676330566406], [41.066927730193456, -73.663330078125], [41.08090391180386, -73.65509033203125], [41.087114594299216, -73.64959716796875], [41.091772220976644, -73.63792419433594], [41.08452688125755, -73.62899780273438], [41.08556197870255, -73.61801147460938], [41.09021971543653, -73.60496520996094], [41.0948771219984, -73.58505249023438], [41.09642951747952, -73.57337951660156], [41.099016761754854, -73.55827331542969], [41.106260503564485, -73.54591369628906], [41.11039942586733, -73.52325439453125], [41.114020768861415, -73.51844787597656], [41.11453808726831, -73.50265502929688], [41.11298611981769, -73.48686218261719], [41.11971104711838, -73.46832275390625], [41.12695250600843, -73.45527648925781], [41.13264166313364, -73.44154357910156], [41.13677892209895, -73.42643737792969], [41.14143302653629, -73.40377807617188], [41.15074024464586, -73.38935852050781], [41.156427338709, -73.37150573730469], [41.16056309723075, -73.34403991699219], [41.16728314823924, -73.32618713378906], [41.17193508755515, -73.31417083740234], [41.17684510960924, -73.30970764160156], [41.18227154791307, -73.29872131347656], [41.18743916640052, -73.28670501708984], [41.192089674364105, -73.27571868896484], [41.19854816519767, -73.26576232910156], [41.20423111001335, -73.26164245605469], [41.21482073580286, -73.25305938720703], [41.220244026689564, -73.24687957763672], [41.22566686789986, -73.23966979980469], [41.2282490151853, -73.22559356689453], [41.22979825461047, -73.20945739746094], [41.23108925942251, -73.19538116455078], [41.23212204491709, -73.1854248046875], [41.23263843154598, -73.1740951538086], [41.23367119256701, -73.15933227539062], [41.233413003841356, -73.14594268798828], [41.23392938027291, -73.13838958740234], [41.235478485093836, -73.13152313232422], [41.23573666566154, -73.12259674072266], [41.2383184152524, -73.1136703491211], [41.24167453726628, -73.1026840209961], [41.24270715552139, -73.09547424316406], [41.244514198206225, -73.0862045288086], [41.24606305216439, -73.07830810546875], [41.2483862642653, -73.07247161865234], [41.255355404938406, -73.06560516357422], [41.26000108568698, -73.06182861328125], [41.266710930072506, -73.05667877197266], [41.27212991645258, -73.04981231689453], [41.276516385517795, -73.04466247558594], [41.28322453276423, -73.04054260253906], [41.28993199051138, -73.03642272949219], [41.29560699312263, -73.03333282470703], [41.30076565799468, -73.03024291992188], [41.30515020233035, -73.02989959716797], [41.30901867310382, -73.026123046875], [41.31159752610863, -73.0209732055664], [41.31340266251607, -73.01239013671875], [41.31598134210304, -73.00346374511719], [41.31830206651102, -72.99625396728516], [41.3219119180153, -72.99179077148438], [41.32706850188449, -72.9873275756836], [41.329904449073865, -72.982177734375], [41.33454482366021, -72.97531127929688], [41.33866932357447, -72.97050476074219], [41.3427935623111, -72.9656982421875], [41.34897943069752, -72.95677185058594], [41.35258758253157, -72.94784545898438], [41.355680124938715, -72.9327392578125], [41.36083403578611, -72.92449951171875], [41.36392618639254, -72.91282653808594], [41.36907944422671, -72.90733337402344], [41.375778069232304, -72.89840698242188], [41.37989995715391, -72.88536071777344], [41.38453676881921, -72.8778076171875], [41.395354710280166, -72.85171508789062], [41.41492545702182, -72.84622192382812], [41.43654942411456, -72.8338623046875], [41.457136982923494, -72.8228759765625], [41.469486382476376, -72.8118896484375], [41.48389104267176, -72.79403686523438], [41.498292501398545, -72.7789306640625], [41.509605687197975, -72.76107788085938], [41.52297326747377, -72.74734497070312], [41.54353338440556, -72.73086547851562], [41.56203190200195, -72.71026611328125], [41.579497863194476, -72.69927978515625], [41.601066942355295, -72.685546875], [41.6195489884308, -72.67730712890625], [41.63494664852403, -72.66357421875], [41.65752323108277, -72.65464782714844], [41.67393759473024, -72.64846801757812], [41.68624562118, -72.63816833496094], [41.70572851523752, -72.63404846191406], [41.720593068878074, -72.63404846191406], [41.731867333719855, -72.6470947265625], [41.74262728637672, -72.65327453613281], [41.75287318430239, -72.64228820800781], [41.75876383516487, -72.63198852539062], [41.761837003596426, -72.6247787475586], [41.76337353262162, -72.61653900146484], [41.764910024852774, -72.60486602783203], [41.76670255261857, -72.59662628173828], [41.76849503030295, -72.58769989013672], [41.771055625832574, -72.57740020751953], [41.773616119153445, -72.56847381591797], [41.78155299890035, -72.56023406982422], [41.78795299288423, -72.55851745605469], [41.797167861890074, -72.55096435546875], [41.80075106429427, -72.54032135009766], [41.80331037191832, -72.5259017944336], [41.809452293149505, -72.5156021118164], [41.81380246443789, -72.50736236572266], [41.81610537669246, -72.50221252441406], [41.81968752005856, -72.49568939208984], [41.82199022070215, -72.48641967773438], [41.825060359418046, -72.47406005859375], [41.828897825796226, -72.46341705322266], [41.83247925355184, -72.45689392089844], [41.83631627521813, -72.44831085205078], [41.841431946284025, -72.4386978149414], [41.847314462448026, -72.43080139160156], [41.851662061565385, -72.42256164550781], [41.850383386614695, -72.4105453491211], [41.850383386614695, -72.40230560302734], [41.850383386614695, -72.39269256591797], [41.850383386614695, -72.38033294677734], [41.85549793305566, -72.36522674560547], [41.862146232018155, -72.35252380371094], [41.869305165620275, -72.33673095703125], [41.874418198833524, -72.32574462890625], [41.88029768140287, -72.31269836425781], [41.88540983525773, -72.301025390625], [41.889499263850155, -72.29106903076172], [41.89639958100335, -72.28248596191406], [41.90099937829354, -72.27561950683594], [41.906620902814, -72.26600646972656], [41.915818693496405, -72.25879669189453], [41.921949817639685, -72.25296020507812], [41.92884662818317, -72.23957061767578], [41.931911638000784, -72.23167419433594], [41.93753044016756, -72.21794128417969], [41.94110578381595, -72.20867156982422], [41.94595771527563, -72.19734191894531], [41.95795827518022, -72.1860122680664], [41.97046709153301, -72.17811584472656], [41.97991089691236, -72.17124938964844], [41.98629105374557, -72.16747283935547], [41.995987667682414, -72.16163635253906], [42.004407212963585, -72.15545654296875], [42.01231546796181, -72.14996337890625], [42.01792718153833, -72.14412689208984], [42.02608879009836, -72.13451385498047], [42.032719325654824, -72.12284088134766], [42.04138898243176, -72.11631774902344], [42.0510771991809, -72.11048126220703], [42.05668549148399, -72.10567474365234], [42.072742861634964, -72.08473205566406], [42.09108916880332, -72.081298828125], [42.10637370579324, -72.0703125], [42.115033308085884, -72.06413269042969], [42.12623809606464, -72.05245971679688], [42.12980284036179, -72.04078674316406], [42.13336738406158, -72.02499389648438], [42.1389684045809, -72.01400756835938], [42.14355068927749, -71.99752807617188], [42.147623552836706, -71.97967529296875], [42.15016895950386, -71.95907592773438], [42.15424139727695, -71.94740295410156], [42.1613675328748, -71.93367004394531], [42.1679839402422, -71.91719055175781], [42.17459965566123, -71.89453125], [42.17968819665961, -71.87599182128906], [42.18681146617391, -71.85401916503906], [42.19342521211486, -71.82998657226562], [42.20309021138071, -71.77848815917969], [42.21733067375916, -71.74896240234375], [42.22089028771468, -71.69883728027344], [42.22343274625828, -71.62055969238281], [42.23766862211923, -71.59378051757812], [42.262065510743916, -71.56700134277344], [42.270195710001786, -71.54022216796875], [42.274768486309554, -71.51687622070312], [42.28289704723818, -71.48872375488281], [42.2966116160828, -71.47087097167969], [42.300166757606, -71.44065856933594], [42.31133875283751, -71.40769958496094], [42.30372169841541, -71.3616943359375], [42.32910829547645, -71.30538940429688], [42.342305278572816, -71.202392578125], [42.35245491952622, -71.13235473632812], [42.35296235855687, -71.12239837646484], [42.34991766291946, -71.11656188964844], [42.34788778389048, -71.10557556152344], [42.347126562355115, -71.0980224609375], [42.34763404440291, -71.09304428100586], [42.34991766291946, -71.08926773071289], [42.35270863955365, -71.09064102172852], [42.35385036700239, -71.09664916992188], [42.35385036700239, -71.10162734985352], [42.35473836290108, -71.11021041870117], [42.3562606123939, -71.11364364624023], [42.36095398287821, -71.11330032348633], [42.363744469413895, -71.11330032348633], [42.365139666205934, -71.11656188964844], [42.3641249807027, -71.12136840820312], [42.36095398287821, -71.12565994262695], [42.359051307364425, -71.1309814453125], [42.36057345238455, -71.1423110961914], [42.36095398287821, -71.14763259887695], [42.36108082586393, -71.1555290222168], [42.36158819524632, -71.15861892700195], [42.36158819524632, -71.17080688476562], [42.36158819524632, -71.1859130859375], [42.35955869313479, -71.20719909667969], [42.354992073710456, -71.21475219726562], [42.35448465106744, -71.22642517089844], [42.353469793490646, -71.23672485351562], [42.35194747639862, -71.24771118164062], [42.350932577852824, -71.2628173828125], [42.34738030389109, -71.26762390136719], [42.343320316410804, -71.28822326660156], [42.34027515373573, -71.312255859375], [42.335199554872325, -71.34178161621094], [42.32758538845383, -71.34796142578125], [42.32403179535469, -71.37405395507812], [42.323524122811556, -71.40083312988281], [42.3189548855809, -71.44271850585938], [42.31184652369511, -71.47293090820312], [42.30169032824449, -71.510009765625], [42.29153249430597, -71.54159545898438], [42.28035698458569, -71.57730102539062], [42.262065510743916, -71.5924072265625], [42.24681856113825, -71.61163330078125], [42.24071874922666, -71.62948608398438], [42.23766862211923, -71.67205810546875], [42.23461834757937, -71.70913696289062], [42.23156792560862, -71.74896240234375], [42.229534229056156, -71.77230834960938], [42.22038178372061, -71.806640625], [42.21021084387633, -71.839599609375], [42.20309021138071, -71.87255859375], [42.19189902447192, -71.90963745117188], [42.17968819665961, -71.94122314453125], [42.16951070521657, -72.00164794921875], [42.15525946577862, -72.04559326171875], [42.13082130188811, -72.09503173828125], [42.0921082525496, -72.11700439453125], [42.06356771883278, -72.13897705078125], [42.04113400940807, -72.15545654296875], [42.01665183556825, -72.17742919921875], [42.00032514831621, -72.191162109375], [41.98399427093563, -72.2021484375], [41.96153247330561, -72.22137451171875], [41.94519164538106, -72.24884033203125], [41.92884662818317, -72.279052734375], [41.91454130182335, -72.301025390625], [41.90023276842022, -72.3284912109375], [41.88387623204765, -72.35595703125], [41.87774145109677, -72.38616943359375], [41.87365126992505, -72.4163818359375], [41.86342467181004, -72.4493408203125], [41.85115059465234, -72.48504638671875], [41.83682786072715, -72.509765625], [41.81431422987253, -72.56195068359375], [41.795888098191426, -72.57843017578125], [41.77950486590359, -72.6141357421875], [41.77336007442076, -72.652587890625], [41.74877502135505, -72.67181396484375], [41.730330050466534, -72.67730712890625], [41.70162734378921, -72.6580810546875], [41.672911819602085, -72.6800537109375], [41.64007838467894, -72.7020263671875], [41.62365539068639, -72.718505859375], [41.5969591019372, -72.740478515625], [41.57025176609894, -72.74871826171875], [41.545589036668105, -72.77618408203125], [41.513719082873486, -72.79815673828125], [41.50240661583931, -72.82012939453125], [41.482862244540875, -72.8338623046875], [41.463311976686235, -72.85446166992188], [41.44066745847658, -72.86407470703125], [41.410805789669816, -72.87368774414062], [41.39329428878487, -72.89840698242188], [41.38299120166604, -72.92587280273438], [41.366502866327224, -72.95333862304688], [41.359287905385166, -72.97943115234375], [41.34691753986531, -72.9931640625], [41.32835758409143, -73.01788330078125], [41.31082388091817, -73.05908203125], [41.279870545327114, -73.07144165039062], [41.264904501329134, -73.07830810546875], [41.256645904958106, -73.09135437011719], [41.25406487942272, -73.1085205078125], [41.2483862642653, -73.12431335449219], [41.24787000204815, -73.14010620117188], [41.244256052310625, -73.17031860351562], [41.24373975746002, -73.19091796875], [41.24322345853026, -73.21083068847656], [41.23960925180691, -73.23692321777344], [41.235478485093836, -73.25408935546875], [41.21740331135408, -73.27400207519531], [41.20345619205131, -73.28636169433594], [41.1951898294896, -73.30833435058594], [41.18692242290296, -73.32138061523438], [41.176586696571015, -73.34884643554688], [41.17141822171995, -73.37081909179688], [41.16935071760144, -73.40309143066406], [41.158495250590065, -73.41819763183594], [41.14970617453726, -73.44291687011719], [41.13315883477399, -73.47175598144531], [41.126435285444494, -73.48960876464844], [41.126435285444494, -73.52531433105469], [41.12178011690935, -73.55072021484375], [41.11246878918088, -73.5699462890625], [41.10832999732831, -73.58573913574219], [41.10419094457646, -73.60633850097656], [41.100569059403675, -73.62762451171875], [41.1016039041209, -73.6468505859375], [41.09746442741868, -73.66813659667969], [41.08038632843491, -73.68049621582031], [41.05967965145965, -73.68461608886719], [41.04569895808175, -73.68392944335938], [41.03326918097483, -73.69285583496094], [41.02964338716639, -73.70933532714844], [41.022909240345506, -73.72718811035156], [41.007884431258375, -73.72718811035156], [40.99726137817312, -73.7350845336914], [40.99026477399688, -73.7457275390625], [40.98326742729392, -73.75534057617188], [40.974195687588434, -73.77525329589844], [40.97056664236637, -73.7900161743164], [40.96253018900655, -73.79756927490234], [40.957344860992855, -73.80443572998047], [40.94904748887512, -73.80546569824219], [40.94489841176807, -73.80786895751953], [40.93789625301414, -73.8119888305664], [40.931152731870384, -73.81370544433594], [40.92726192578736, -73.81885528564453], [40.92907766380368, -73.83224487304688], [40.9329683629703, -73.84082794189453], [40.934783944175145, -73.85009765625], [40.93361679055693, -73.85438919067383], [40.931152731870384, -73.8607406616211], [40.928169801032276, -73.86228561401367], [40.92350059546495, -73.86674880981445], [40.92064702965644, -73.87292861938477], [40.91753390826241, -73.87619018554688], [40.91480980676915, -73.87825012207031], [40.90754498732904, -73.88099670410156], [40.90430150664716, -73.88202667236328], [40.89885210097921, -73.88391494750977], [40.89547843437612, -73.88803482055664], [40.88963898943264, -73.8943862915039], [40.887562618139384, -73.90056610107422], [40.883928811599326, -73.90571594238281], [40.87692019266084, -73.90846252441406], [40.872247367751896, -73.91120910644531], [40.86731458364796, -73.91361236572266], [40.8626410807892, -73.91704559326172], [40.858746243141574, -73.92013549804688], [40.85588988330874, -73.92288208007812], [40.85251402653678, -73.92562866210938], [40.84913799774759, -73.92837524414062], [40.85069618625578, -73.93661499023438], [40.8527737139341, -73.94176483154297], [40.848878296100445, -73.94554138183594], [40.84628122364845, -73.94554138183594], [40.84309967118491, -73.9463996887207], [40.84089197359531, -73.94708633422852], [40.839723162747944, -73.94803047180176], [40.837904971575064, -73.94888877868652], [40.836216606545264, -73.94966125488281], [40.8343983191928, -73.95017623901367], [40.83309951197968, -73.95069122314453], [40.831475967182925, -73.95103454589844], [40.82894315791609, -73.95215034484863], [40.82731951134558, -73.9533519744873], [40.824851492420166, -73.95549774169922], [40.822448333106685, -73.95790100097656], [40.82062966817709, -73.96004676818848], [40.818096444638954, -73.96227836608887], [40.81673236112433, -73.96322250366211], [40.81478362173202, -73.96305084228516], [40.81341947009762, -73.96373748779297], [40.8119253670768, -73.96459579467773], [40.8104312304102, -73.96408081054688], [40.810301303892615, -73.96270751953125], [40.80796258307235, -73.96270751953125], [40.80594861853821, -73.96330833435059], [40.803934592883806, -73.96305084228516]]')
#test_info = ultil.get_area_tile_matrix(test, 14, True)
#test_matrix = ultil.get_area_tile_matrix_url("map_tile", test, 14, True)
##img_matrix = ultil.assemble_matrix_images(test_matrix)


## Cities we are interested in 
# Atlanta (already have)
# San Francisco
# Boston
# Norfolk
# Pittsburgh
# Greenville


def get_polygon_from_geojson(geojson_polygon):
    if type(geojson_polygon) == str:
        geojson_polygon = json.loads(geojson_polygon)
    histraffic_polygon = []
    for item in geojson_polygon:
        histraffic_polygon += [[item[1], item[0]]]
    return histraffic_polygon

San_Francisco_polygon = [[37.837174338616975,-122.48725891113281],[37.83364941345965,-122.48485565185547],[37.83093781796035,-122.4814224243164],[37.82415839321614,-122.48004913330078],[37.8203616433087,-122.47970581054688],[37.81059767530207,-122.47798919677734],[37.806122091729485,-122.47627258300781],[37.79215110146845,-122.48039245605469],[37.78726741375342,-122.48519897460938],[37.78618210598413,-122.49927520751953],[37.78645343442073,-122.50614166259766],[37.779127216982424,-122.51232147216797],[37.772614414082014,-122.51163482666016],[37.76121562849642,-122.51197814941406],[37.75171529845649,-122.51060485839844],[37.74329970164702,-122.50957489013672],[37.735969208590504,-122.50717163085938],[37.73081027834234,-122.50717163085938],[37.72293542866175,-122.50682830810547],[37.715331331027045,-122.50442504882812],[37.714244967649265,-122.49893188476562],[37.71940505182832,-122.50030517578125],[37.724564776604836,-122.5030517578125],[37.729724141962045,-122.50167846679688],[37.7324394530424,-122.49549865722656],[37.72918106779786,-122.49378204345703],[37.729724141962045,-122.48828887939453],[37.72782336496339,-122.4807357788086],[37.73271097867418,-122.37945556640625],[37.74520008134973,-122.37533569335938],[37.74655746554895,-122.39112854003906],[37.75008654795525,-122.3873519897461],[37.754972691904946,-122.38391876220703],[37.76148704857093,-122.38597869873047],[37.769629187677005,-122.3876953125],[37.78265474565738,-122.38872528076172],[37.78781006166096,-122.3880386352539],[37.79594930209237,-122.37911224365234],[37.804358908571395,-122.36984252929688],[37.812767557570204,-122.3605728149414],[37.817649559511125,-122.35130310058594],[37.82009043941308,-122.332763671875],[37.823344820392535,-122.30632781982422],[37.8271414168374,-122.30701446533203],[37.824700770115996,-122.31765747070312],[37.82253123860035,-122.33139038085938],[37.8203616433087,-122.34615325927734],[37.81792077237497,-122.35576629638672],[37.81168262440736,-122.3653793334961],[37.803002585189645,-122.37396240234375],[37.790523241426946,-122.3880386352539],[37.79594930209237,-122.39490509033203],[37.80273131752431,-122.39936828613281],[37.80815648152641,-122.40726470947266],[37.80734273233311,-122.42305755615234],[37.807071480609274,-122.43267059326172],[37.80571520704469,-122.44194030761719],[37.80463017025873,-122.45189666748047],[37.80463017025873,-122.464599609375],[37.807071480609274,-122.47421264648438],[37.815208598896255,-122.47695922851562],[37.82768377181359,-122.47798919677734],[37.835276322922695,-122.48004913330078],[37.837174338616975,-122.48725891113281]]
Boston_polygon = [[42.32453946380133,-71.13029479980469],[42.32758538845383,-71.0489273071289],[42.330631165629846,-71.03588104248047],[42.33316920061984,-71.02180480957031],[42.339513840022754,-71.02455139160156],[42.3397676122846,-71.04412078857422],[42.34611158596906,-71.02558135986328],[42.356514317057886,-71.02317810058594],[42.348648996207956,-71.00669860839844],[42.35829022102701,-71.00360870361328],[42.353469793490646,-70.99090576171875],[42.36057345238455,-70.98918914794922],[42.363110278811256,-71.00223541259766],[42.37883631647602,-70.99983215332031],[42.37756823359386,-71.00738525390625],[42.37224200585402,-71.01631164550781],[42.37680737157286,-71.02008819580078],[42.381879610913195,-71.015625],[42.38999434161929,-71.00704193115234],[42.40444610741266,-71.00395202636719],[42.40444610741266,-71.13029479980469],[42.32453946380133,-71.13029479980469]]
Pittsburgh_polygon = [[40.603526799885884,-80.09445190429688],[40.564937785967224,-80.13427734375],[40.50126945841646,-80.14801025390625],[40.42290582797254,-80.12054443359375],[40.3549167507906,-80.1287841796875],[40.330842639095756,-80.14389038085938],[40.31199603742692,-80.16311645507812],[40.319325896602095,-79.9310302734375],[40.365381076021734,-79.80056762695312],[40.57119697629581,-79.7991943359375],[40.603526799885884,-80.09445190429688]]
Greenville_polygon = [[34.96531080784271,-82.44483947753906],[34.946176590087454,-82.44140625],[34.92422301690582,-82.45994567871094],[34.89888467073924,-82.46818542480469],[34.871285134570016,-82.47367858886719],[34.837477162415986,-82.452392578125],[34.83015027082022,-82.54096984863281],[34.820004267650454,-82.53822326660156],[34.829022998858306,-82.45101928710938],[34.8047829195724,-82.44071960449219],[34.79068657192738,-82.44552612304688],[34.770383597610255,-82.47573852539062],[34.76192255039478,-82.47024536132812],[34.784483415461345,-82.44415283203125],[34.7483830709853,-82.31849670410156],[34.71847552413778,-82.25944519042969],[34.72073307506407,-82.24845886230469],[34.75740963726007,-82.28141784667969],[34.77263973038464,-82.26699829101562],[34.83184114982865,-82.28965759277344],[34.86058077988933,-82.24845886230469],[34.86790496256872,-82.25601196289062],[34.839167890957015,-82.30133056640625],[34.86903170200862,-82.34458923339844],[34.96531080784271,-82.44483947753906]]
Norfolk_polygon = [[37.00693943418586,-76.32339477539062],[36.98884240936997,-76.31034851074219],[36.982260605282676,-76.30348205566406],[36.96799807635307,-76.30210876464844],[36.95976847846004,-76.27738952636719],[36.953732874654285,-76.2725830078125],[36.94769679250732,-76.28700256347656],[36.95098926024786,-76.29661560058594],[36.95757376878687,-76.30348205566406],[36.95976847846004,-76.31584167480469],[36.9669008480318,-76.32820129394531],[36.90323455156814,-76.32888793945312],[36.91366629380721,-76.31721496582031],[36.90927415514871,-76.28631591796875],[36.89499795802219,-76.28974914550781],[36.901587303978474,-76.30348205566406],[36.90323455156814,-76.31515502929688],[36.874127942666334,-76.32888793945312],[36.8631414329529,-76.30828857421875],[36.849955535919875,-76.32682800292969],[36.856548768788954,-76.34056091308594],[36.82852360193767,-76.33094787597656],[36.820278951308744,-76.34536743164062],[36.81203341240741,-76.34124755859375],[36.83017242546416,-76.28974914550781],[36.79993834872292,-76.2835693359375],[36.80323719192363,-76.19155883789062],[36.84116367417466,-76.19499206542969],[36.82137828938333,-76.1407470703125],[36.82577548376294,-76.04873657226562],[36.84281222525469,-76.04736328125],[36.85160389745116,-76.14280700683594],[36.92739009701458,-76.16065979003906],[36.93726970584893,-76.22039794921875],[36.96799807635307,-76.27670288085938],[36.96854668458301,-76.29592895507812],[36.98390610968992,-76.29936218261719],[37.00693943418586,-76.32339477539062]]

combined_matrix = [San_Francisco_polygon, Boston_polygon, Pittsburgh_polygon, Greenville_polygon, Norfolk_polygon]

print()
print("========================================")
for item in combined_matrix:
    info_matrix = ultil.get_area_tile_matrix(item, 14, True)
    matrix_coverage(info_matrix)
    
