{"version":3,"sources":["webpack:///static/js/4.802ad3e3fcf046e611e3.js","webpack:///./src/components/Polygon.vue","webpack:///Polygon.vue","webpack:///./src/components/Polygon.vue?db96","webpack:///./src/components/Polygon.vue?fb5c","webpack:///./src/components/Polygon.vue?a54b"],"names":["webpackJsonp","166","module","exports","__webpack_require__","injectStyle","ssrContext","Component","421","__webpack_exports__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","__WEBPACK_IMPORTED_MODULE_1_vue2_google_maps__","use","load","key","name","data","center","lat","lng","map_geojson","dialog","methods","displayGeoJson","results","this","$refs","mymap","$mapObject","toGeoJson","geojson","loadControls","setControls","created","mounted","computed","historic_batch","$store","state","435","push","i","version","sources","names","mappings","file","sourcesContent","sourceRoot","438","content","locals","452","render","_vm","_h","$createElement","_c","_self","attrs","row","wrap","staticClass","xs8","_v","staticStyle","font-weight","dark","left","default","nativeOn","click","$event","width","model","callback","$$v","expression","slot","directives","rawName","height","domProps","on","input","target","composing","_s","xs12","ref","zoom","staticRenderFns"],"mappings":"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","file":"static/js/4.802ad3e3fcf046e611e3.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 166:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(438)\n}\nvar Component = __webpack_require__(8)(\n  /* script */\n  __webpack_require__(421),\n  /* template */\n  __webpack_require__(452),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-e721fa56\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 421:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue2_google_maps__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue2_google_maps___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vue2_google_maps__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue__ = __webpack_require__(24);\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_2_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vue2_google_maps__, {\n  load: {\n    key: 'AIzaSyAucd0sk7vH1NjQyh3b2kN8qYKhdu4S1Ss'\n  }\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'Polygon',\n  data: function data() {\n    return {\n      center: { lat: 33.7601, lng: -84.37429 },\n      map_geojson: null,\n      dialog: false\n    };\n  },\n\n  methods: {\n    displayGeoJson: function displayGeoJson() {\n      var results = void 0;\n      this.$refs.mymap.$mapObject.data.toGeoJson(function (geojson) {\n        results = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(geojson, null, 2);\n      });\n      this.map_geojson = results;\n    },\n    loadControls: function loadControls() {\n      this.$refs.mymap.$mapObject.data.setControls(['Polygon']);\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n\n  computed: {\n    historic_batch: function historic_batch() {\n      return this.$store.state.historic_batch;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 435:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(161)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".geojson_output[data-v-e721fa56]{width:100%}textarea[data-v-e721fa56]{border-style:solid}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/shuang/Desktop/Summer/scTrafficCount/web/src/components/Polygon.vue\"],\"names\":[],\"mappings\":\"AACA,iCACE,UAAY,CACb,AACD,0BACE,kBAAoB,CACrB\",\"file\":\"Polygon.vue\",\"sourcesContent\":[\"\\n.geojson_output[data-v-e721fa56] {\\n  width: 100%;\\n}\\ntextarea[data-v-e721fa56] {\\n  border-style: solid;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(435);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(162)(\"7604268c\", content, true);\n\n/***/ }),\n\n/***/ 452:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('v-layout', {\n    attrs: {\n      \"row\": \"\",\n      \"wrap\": \"\"\n    }\n  }, [_c('v-flex', {\n    staticClass: \"my-3\",\n    attrs: {\n      \"xs8\": \"\"\n    }\n  }, [_c('h6', [_vm._v(\"Histraffic Polygon section\")]), _vm._v(\" \"), _c('p', [_vm._v(\"In this section, you can draw a polygon in the map to specify an area of which you will download traffic data from. To start, simply click the \"), _c('span', {\n    staticStyle: {\n      \"font-weight\": \"bold\"\n    }\n  }, [_vm._v(\"'Load Drawing Tools'\")]), _vm._v(\" button below, and start drawing. After you are finished, click the \"), _c('span', {\n    staticStyle: {\n      \"font-weight\": \"bold\"\n    }\n  }, [_vm._v(\"'Finished Drawing Polygon'\")]), _vm._v(\" button\")]), _vm._v(\" \"), _c('p', [_vm._v(\"Note: right now we don't support self-intersecting polygon or multiple polygons\")]), _vm._v(\" \"), _c('div', [_c('v-btn', {\n    staticClass: \"ml-0 mt-3\",\n    attrs: {\n      \"dark\": \"\",\n      \"left\": \"\",\n      \"default\": \"\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.loadControls($event)\n      }\n    }\n  }, [_vm._v(\"1. Load Drawing Tools\")]), _vm._v(\" \"), _c('v-dialog', {\n    attrs: {\n      \"width\": \"600px\"\n    },\n    model: {\n      value: (_vm.dialog),\n      callback: function($$v) {\n        _vm.dialog = $$v\n      },\n      expression: \"dialog\"\n    }\n  }, [_c('v-btn', {\n    staticClass: \"ml-0 mt-3\",\n    attrs: {\n      \"dark\": \"\",\n      \"left\": \"\",\n      \"default\": \"\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.displayGeoJson($event)\n      }\n    },\n    slot: \"activator\"\n  }, [_vm._v(\"2. Finished Drawing Polygon\")]), _vm._v(\" \"), _c('v-card', [_c('v-card-title', [_c('div', {\n    staticClass: \"headline\"\n  }, [_vm._v(\"Geojson Format (prettified)\")])]), _vm._v(\" \"), _c('v-card-text', [_c('div', {\n    staticClass: \"geojson_output\"\n  }, [_c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.map_geojson),\n      expression: \"map_geojson\"\n    }],\n    staticStyle: {\n      \"width\": \"100%\",\n      \"height\": \"300px\"\n    },\n    domProps: {\n      \"value\": (_vm.map_geojson)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.map_geojson = $event.target.value\n      }\n    }\n  })])]), _vm._v(\" \"), _c('v-card-title', [_c('div', {\n    staticClass: \"headline\"\n  }, [_vm._v(\"Geojson Format (uglified)\")])]), _vm._v(\" \"), _c('v-card-text', [_c('p', [_vm._v(\"Now, simply copy the following json encoded string, and use map_resource.ultil.read_geojson_polygon() to generate a polygon\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"geojson_output\"\n  }, [_c('div', [_vm._v(\"'\" + _vm._s(_vm.map_geojson) + \"'\")])])])], 1)], 1)], 1)]), _vm._v(\" \"), _c('v-flex', {\n    staticClass: \"my-3\",\n    attrs: {\n      \"xs12\": \"\"\n    }\n  }, [_c('v-card', [_c('v-card-row', {\n    staticClass: \"green darken-1\"\n  }, [_c('v-card-title', [_c('span', {\n    staticClass: \"white--text\"\n  }, [_vm._v(\"The Map\")]), _vm._v(\" \"), _c('v-spacer')], 1)], 1), _vm._v(\" \"), _c('v-card-text', [_c('v-card-row', {\n    attrs: {\n      \"height\": \"auto\",\n      \"center\": \"\"\n    }\n  }, [_c('gmap-map', {\n    ref: \"mymap\",\n    staticStyle: {\n      \"width\": \"100%\",\n      \"height\": \"500px\"\n    },\n    attrs: {\n      \"center\": _vm.center,\n      \"zoom\": 14\n    }\n  })], 1)], 1)], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/4.802ad3e3fcf046e611e3.js","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e721fa56\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Polygon.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Polygon.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e721fa56\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Polygon.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-e721fa56\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Polygon.vue\n// module id = 166\n// module chunks = 4","<template>\r\n  <v-layout row wrap>\r\n    <v-flex xs8 class=\"my-3\">\r\n      <h6>Histraffic Polygon section</h6>\r\n      <p>In this section, you can draw a polygon in the map to specify an area of which you will download traffic data from. To start, simply click the <span style=\"font-weight:bold\">'Load Drawing Tools'</span> button below, and start drawing. After you are finished, click the <span style=\"font-weight:bold\">'Finished Drawing Polygon'</span> button</p>\r\n      <p>Note: right now we don't support self-intersecting polygon or multiple polygons</p>\r\n      <div>\r\n        <v-btn dark left default @click.native=\"loadControls\" class=\"ml-0 mt-3\">1. Load Drawing Tools</v-btn>\r\n        <v-dialog v-model=\"dialog\" width=\"600px\">\r\n          <v-btn dark left default @click.native=\"displayGeoJson\" class=\"ml-0 mt-3\" slot=\"activator\">2. Finished Drawing Polygon</v-btn>\r\n          <v-card>\r\n            <v-card-title>\r\n              <div class=\"headline\">Geojson Format (prettified)</div>\r\n            </v-card-title>\r\n            <v-card-text>\r\n              <div class=\"geojson_output\">\r\n                <textarea style=\"width: 100%; height: 300px\" v-model=\"map_geojson\"></textarea>\r\n              </div>\r\n            </v-card-text>\r\n            <v-card-title>\r\n              <div class=\"headline\">Geojson Format (uglified)</div>\r\n            </v-card-title>\r\n            <v-card-text>\r\n              <p>Now, simply copy the following json encoded string, and use map_resource.ultil.read_geojson_polygon() to generate a polygon</p>\r\n              <div class=\"geojson_output\">\r\n                <div>'{{map_geojson}}'</div>\r\n              </div>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-dialog>\r\n      </div>\r\n    </v-flex>\r\n    <v-flex xs12 class=\"my-3\">\r\n      <v-card>\r\n        <v-card-row class=\"green darken-1\">\r\n          <v-card-title>\r\n            <span class=\"white--text\">The Map</span>\r\n            <v-spacer></v-spacer>\r\n          </v-card-title>\r\n        </v-card-row>\r\n        <v-card-text>\r\n          <v-card-row height=\"auto\" center>\r\n            <gmap-map ref = \"mymap\" :center=\"center\" :zoom=\"14\" style=\"width: 100%; height: 500px\">\r\n            </gmap-map>\r\n          </v-card-row>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-flex>\r\n  </v-layout>\r\n</template>\r\n\r\n<script>\r\nimport * as VueGoogleMaps from 'vue2-google-maps'\r\nimport Vue from 'vue'\r\n\r\nVue.use(VueGoogleMaps, {\r\n  load: {\r\n    key: 'AIzaSyAucd0sk7vH1NjQyh3b2kN8qYKhdu4S1Ss'\r\n    // libraries: 'places', //// If you need to use place input\r\n  }\r\n})\r\n\r\nexport default {\r\n  name: 'Polygon',\r\n  data () {\r\n    return {\r\n      center: {lat: 33.7601, lng: -84.37429}, // {lat: 34.91623, lng: -82.42907}  Furman   {lat: 33.7601, lng: -84.37429} Atlanta\r\n      map_geojson: null,\r\n      dialog: false\r\n    }\r\n  },\r\n  methods: {\r\n    displayGeoJson() {\r\n      let results\r\n      this.$refs.mymap.$mapObject.data.toGeoJson((geojson) => {\r\n        results = JSON.stringify(geojson, null, 2)\r\n      })\r\n      this.map_geojson = results\r\n    },\r\n    loadControls() {\r\n      this.$refs.mymap.$mapObject.data.setControls(['Polygon'])\r\n    }\r\n  },\r\n  created() {\r\n    // pass\r\n  },\r\n  mounted() {\r\n    // pass\r\n  },\r\n  computed: {\r\n    historic_batch() {\r\n      return this.$store.state.historic_batch\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add 'scoped' attribute to limit CSS to this component only -->\r\n<style lang=\"scss\" scoped>\r\n\r\n.geojson_output {\r\n  width: 100%;\r\n}\r\n  textarea {\r\n    border-style: solid;\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Polygon.vue?13ee6ff0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".geojson_output[data-v-e721fa56]{width:100%}textarea[data-v-e721fa56]{border-style:solid}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/shuang/Desktop/Summer/scTrafficCount/web/src/components/Polygon.vue\"],\"names\":[],\"mappings\":\"AACA,iCACE,UAAY,CACb,AACD,0BACE,kBAAoB,CACrB\",\"file\":\"Polygon.vue\",\"sourcesContent\":[\"\\n.geojson_output[data-v-e721fa56] {\\n  width: 100%;\\n}\\ntextarea[data-v-e721fa56] {\\n  border-style: solid;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-e721fa56\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Polygon.vue\n// module id = 435\n// module chunks = 4","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e721fa56\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Polygon.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"7604268c\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-e721fa56\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Polygon.vue\n// module id = 438\n// module chunks = 4","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('v-layout', {\n    attrs: {\n      \"row\": \"\",\n      \"wrap\": \"\"\n    }\n  }, [_c('v-flex', {\n    staticClass: \"my-3\",\n    attrs: {\n      \"xs8\": \"\"\n    }\n  }, [_c('h6', [_vm._v(\"Histraffic Polygon section\")]), _vm._v(\" \"), _c('p', [_vm._v(\"In this section, you can draw a polygon in the map to specify an area of which you will download traffic data from. To start, simply click the \"), _c('span', {\n    staticStyle: {\n      \"font-weight\": \"bold\"\n    }\n  }, [_vm._v(\"'Load Drawing Tools'\")]), _vm._v(\" button below, and start drawing. After you are finished, click the \"), _c('span', {\n    staticStyle: {\n      \"font-weight\": \"bold\"\n    }\n  }, [_vm._v(\"'Finished Drawing Polygon'\")]), _vm._v(\" button\")]), _vm._v(\" \"), _c('p', [_vm._v(\"Note: right now we don't support self-intersecting polygon or multiple polygons\")]), _vm._v(\" \"), _c('div', [_c('v-btn', {\n    staticClass: \"ml-0 mt-3\",\n    attrs: {\n      \"dark\": \"\",\n      \"left\": \"\",\n      \"default\": \"\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.loadControls($event)\n      }\n    }\n  }, [_vm._v(\"1. Load Drawing Tools\")]), _vm._v(\" \"), _c('v-dialog', {\n    attrs: {\n      \"width\": \"600px\"\n    },\n    model: {\n      value: (_vm.dialog),\n      callback: function($$v) {\n        _vm.dialog = $$v\n      },\n      expression: \"dialog\"\n    }\n  }, [_c('v-btn', {\n    staticClass: \"ml-0 mt-3\",\n    attrs: {\n      \"dark\": \"\",\n      \"left\": \"\",\n      \"default\": \"\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.displayGeoJson($event)\n      }\n    },\n    slot: \"activator\"\n  }, [_vm._v(\"2. Finished Drawing Polygon\")]), _vm._v(\" \"), _c('v-card', [_c('v-card-title', [_c('div', {\n    staticClass: \"headline\"\n  }, [_vm._v(\"Geojson Format (prettified)\")])]), _vm._v(\" \"), _c('v-card-text', [_c('div', {\n    staticClass: \"geojson_output\"\n  }, [_c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.map_geojson),\n      expression: \"map_geojson\"\n    }],\n    staticStyle: {\n      \"width\": \"100%\",\n      \"height\": \"300px\"\n    },\n    domProps: {\n      \"value\": (_vm.map_geojson)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.map_geojson = $event.target.value\n      }\n    }\n  })])]), _vm._v(\" \"), _c('v-card-title', [_c('div', {\n    staticClass: \"headline\"\n  }, [_vm._v(\"Geojson Format (uglified)\")])]), _vm._v(\" \"), _c('v-card-text', [_c('p', [_vm._v(\"Now, simply copy the following json encoded string, and use map_resource.ultil.read_geojson_polygon() to generate a polygon\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"geojson_output\"\n  }, [_c('div', [_vm._v(\"'\" + _vm._s(_vm.map_geojson) + \"'\")])])])], 1)], 1)], 1)]), _vm._v(\" \"), _c('v-flex', {\n    staticClass: \"my-3\",\n    attrs: {\n      \"xs12\": \"\"\n    }\n  }, [_c('v-card', [_c('v-card-row', {\n    staticClass: \"green darken-1\"\n  }, [_c('v-card-title', [_c('span', {\n    staticClass: \"white--text\"\n  }, [_vm._v(\"The Map\")]), _vm._v(\" \"), _c('v-spacer')], 1)], 1), _vm._v(\" \"), _c('v-card-text', [_c('v-card-row', {\n    attrs: {\n      \"height\": \"auto\",\n      \"center\": \"\"\n    }\n  }, [_c('gmap-map', {\n    ref: \"mymap\",\n    staticStyle: {\n      \"width\": \"100%\",\n      \"height\": \"500px\"\n    },\n    attrs: {\n      \"center\": _vm.center,\n      \"zoom\": 14\n    }\n  })], 1)], 1)], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-e721fa56\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Polygon.vue\n// module id = 452\n// module chunks = 4"],"sourceRoot":""}